<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.simplyti.cloud</groupId>
	<artifactId>kube-client</artifactId>
	<version>1.0.0-SNAPSHOT</version>

	<name>Kubernetes client</name>
	<description>Kubernetes api server client</description>
	<url>https://github.com/simplyti/kube-client</url>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<scm>
		<url>https://github.com/simplyti/kube-client</url>
		<connection>scm:git:git://github.com/simplyti/kube-client.git</connection>
		<developerConnection>scm:git:git@github.com:username/kube-client.git</developerConnection>
	</scm>
	
	<developers>
		<developer>
			<id>ptaboas</id>
			<name>Pablo Taboas</name>
			<email>p.taboas@simplyti.com</email>
		</developer>
	</developers>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<java.version>1.8</java.version>

		<maven-compiler-plugin.version>3.6.1</maven-compiler-plugin.version>
		<maven-failsafe-plugin.version>2.20</maven-failsafe-plugin.version>
		<exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>
		<jacoco-maven-plugin.version>0.8.1</jacoco-maven-plugin.version>
		<coveralls-maven-plugin.version>4.3.0</coveralls-maven-plugin.version>
		<maven-help-plugin.version>2.2</maven-help-plugin.version>
		<versions-maven-plugin.version>2.4</versions-maven-plugin.version>
		<maven-source-plugin.version>3.0.1</maven-source-plugin.version>
		<maven-javadoc-plugin.version>3.0.0-M1</maven-javadoc-plugin.version>
		<maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>

		<lombok.version>1.16.20</lombok.version>
		<netty.version>4.1.27.Final</netty.version>
		<jsoniter.version>0.9.22</jsoniter.version>
		<vavr.version>0.9.2</vavr.version>
		<guava.version>24.1-jre</guava.version>

		<log4j.version>2.10.0</log4j.version>

		<junit.version>4.12</junit.version>
		<hamcrest.version>1.3</hamcrest.version>
		<awaitility.version>1.7.0</awaitility.version>
		<cucumber.version>1.2.5</cucumber.version>
		<guice.version>4.2.0</guice.version>
		<commons-io.version>2.6</commons-io.version>
	</properties>


	<build>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<excludes>
							<exclude>**/CucumberITest.java</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.eluder.coveralls</groupId>
					<artifactId>coveralls-maven-plugin</artifactId>
					<version>${coveralls-maven-plugin.version}</version>
					<configuration>
						<repoToken>${coveralls.token}</repoToken>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-help-plugin</artifactId>
					<version>${maven-help-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${versions-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>${maven-gpg-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven-failsafe-plugin.version}</version>
				<configuration>
					<argLine>${failsafeArgLine}</argLine>
					<systemPropertyVariables>
						<guice.injector-source>com.simplyti.cloud.kube.client.CustomInjectorSource</guice.injector-source>
					</systemPropertyVariables>
					<includes>
						<include>**/CucumberITest.java</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>${exec-maven-plugin.version}</version>
				<configuration>
					<executable>docker-compose</executable>
					<workingDirectory>${project.build.directory}/test-classes</workingDirectory>
				</configuration>
				<executions>
					<!-- Pull Docker compose images -->
					<execution>
						<id>docker-compose-pull</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<skip>${maven.test.skip}</skip>
							<arguments>
								<argument>pull</argument>
							</arguments>
						</configuration>
					</execution>
					<!-- Start Docker compose -->
					<execution>
						<id>docker-compose-up</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<skip>${maven.test.skip}</skip>
							<async>true</async>
							<asyncDestroyOnShutdown>true</asyncDestroyOnShutdown>
							<arguments>
								<argument>up</argument>
							</arguments>
						</configuration>
					</execution>
					<!-- Stop Docker compose -->
					<execution>
						<id>docker-compose-down</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<skip>${maven.test.skip}</skip>
							<arguments>
								<argument>down</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<executions>
					<!-- Prepare jacoco agent for coverage metrics -->
					<execution>
						<id>prepare-integration-test-agent</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/jacoco-it.exec</destFile>
							<propertyName>failsafeArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>generate-integration-test-report</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report-integration</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Netty -->
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-transport</artifactId>
			<version>${netty.version}</version>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-handler</artifactId>
			<version>${netty.version}</version>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-codec-http</artifactId>
			<version>${netty.version}</version>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-transport-native-epoll</artifactId>
			<version>${netty.version}</version>
			<classifier>linux-x86_64</classifier>
		</dependency>
		<dependency>
		    <groupId>io.netty</groupId>
		    <artifactId>netty-transport-native-kqueue</artifactId>
		    <version>${netty.version}</version>
		    <classifier>osx-x86_64</classifier>
		</dependency>

		<!-- JSON -->
		<dependency>
			<groupId>com.jsoniter</groupId>
			<artifactId>jsoniter</artifactId>
			<version>${jsoniter.version}</version>
		</dependency>

		<!-- Guava -->
		<dependency>
			<groupId>io.vavr</groupId>
			<artifactId>vavr</artifactId>
			<version>${vavr.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<version>${hamcrest.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<version>${awaitility.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-guice</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>${guice.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
			<scope>test</scope>
		</dependency>
		
		<!-- Test logging -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version>
			<scope>test</scope>
		</dependency>
		

	</dependencies>

	<distributionManagement>
		<repository>
			<id>ossrh</id>
			<name>Nexus Release Repository</name>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
		</repository>
		<snapshotRepository>
			<id>ossrh</id>
			<name>Sonatype Nexus Snapshots</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>

</project>